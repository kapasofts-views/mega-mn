<?php
/**
 * User: Margots
 * Date: 10/25/13
 * Time: 10:08 PM
 * To register mega mn members.
 */

function mega_members_menu() {
    $items['register'] = array(
        'title' => 'Membership Registration',
        'description' => 'registration form for members',
        'page callback' => 'register_member_page',
        'access callback' => 'user_is_logged_in',
    );

    return $items;
}

function register_member_page() {
    $build = array(
        'header_text' => array(
            '#type' => 'markup',
            '#markup' => '<h3>'.t('Mega MN Next of Kin Registration Form').'</h3>',
        ),
        'registration_form' => drupal_get_form('collect_member_info_form'),
    );
    return $build;
}

function collect_member_info_form($form, &$form_submit) {

    $form['member'] = array(
        '#title' => 'Personal Information',
        '#type' => 'fieldset',
        '#collapsible' => TRUE,
        '#collapsed' => FALSE,
    );
    $form['member']['member_first_name'] = array(
        '#title' => t('First Name'),
        '#type' => 'textfield',
        '#required' => TRUE,
        '#description' => t(''),
    );

    $form['member']['member_last_name'] = array(
        '#title' => t('Last Name'),
        '#type' => 'textfield',
        '#required' => TRUE,
        '#description' => t(''),
    );

    $form['member']['member_address'] = array(
        '#title' => t('Address'),
        '#type' => 'textfield',
        '#required' => TRUE,
        '#description' => t(''),
    );

    $form['member']['member_city'] = array(
        '#title' => t('City'),
        '#type' => 'textfield',
        '#required' => TRUE,
        '#description' => t(''),
    );

    $form['member']['member_state'] = array(
        '#title' => t('State'),
        '#type' => 'textfield',
        '#required' => TRUE,
        '#description' => t(''),
        '#rules' => array('length[2]',),
    );

    $form['member']['member_zip'] = array(
        '#title' => t('Zip'),
        '#type' => 'textfield',
        '#required' => TRUE,
        '#description' => t(''),
        '#rules' => array('numeric',),
    );

    $form['member']['member_phone'] = array(
        '#title' => t('Phone'),
        '#type' => 'textfield',
        '#required' => TRUE,
        '#description' => t(''),
    );
    $form['member']['member_email'] = array(
        '#title' => t('Email'),
        '#type' => 'textfield',
        '#required' => TRUE,
        '#description' => t(''),
        '#rules' => array('email',),
    );

    $form['member']['member_residency'] = array(
        '#title' => t('US Resident'),
        '#type' => 'radios',
        '#required' => TRUE,
        '#options' => array('yes' => t('Yes'), 'no' => t('No')),
        '#default_value' => 'no',
    );

    $form['parents'] = array(
        '#title' => 'Parents',
        '#type' => 'fieldset',
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['parents']['mother_first_name'] = array(
        '#title' => t('Mother First Name'),
        '#type' => 'textfield',
        '#required' => FALSE,
        '#description' => t(''),
    );

    $form['parents']['mother_last_name'] = array(
        '#title' => t('Mother Last Name'),
        '#type' => 'textfield',
        '#required' => FALSE,
        '#description' => t(''),
    );
    $form['parents']['member_mother'] = array(
        '#title' => t('Mother is a US Resident?'),
        '#type' => 'radios',
        '#required' => FALSE,
        '#options' => array('yes' => t('Yes'), 'no' => t('No')),
        '#default_value' => 'no',
    );

    $form['parents']['father_first_name'] = array(
        '#title' => t('Father First Name'),
        '#type' => 'textfield',
        '#required' => FALSE,
        '#description' => t(''),
    );

    $form['parents']['father_last_name'] = array(
        '#title' => t('Father Last Name'),
        '#type' => 'textfield',
        '#required' => FALSE,
        '#description' => t(''),
    );

    $form['parents']['member_father'] = array(
        '#title' => t('Father is a US Resident?'),
        '#type' => 'radios',
        '#required' => TRUE,
        '#options' => array('yes' => t('Yes'), 'no' => t('No')),
        '#default_value' => 'no',
    );

    $form['spouse'] = array(
        '#title' => 'Spouse',
        '#type' => 'fieldset',
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );

    $form['spouse']['spouse_first_name'] = array(
        '#title' => t('First Name'),
        '#type' => 'textfield',
        '#required' => FALSE,
        '#description' => t(''),
    );

    $form['spouse']['spouse_last_name'] = array(
        '#title' => t('Last Name'),
        '#type' => 'textfield',
        '#required' => FALSE,
        '#description' => t(''),
    );

    $form['spouse']['spouse_resident'] = array(
        '#title' => t('US Resident?'),
        '#type' => 'radios',
        '#required' => FALSE,
        '#options' => array('yes' => t('Yes'), 'no' => t('No')),
        '#default_value' => 'no',
    );

    $form['child'] = array(
        '#title' => 'Child',
        '#type' => 'fieldset',
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );

    $form['child']['child_first_name'] = array(
        '#title' => t('First Name'),
        '#type' => 'textfield',
        '#required' => FALSE,
        '#description' => t(''),
    );

    $form['child']['child_last_name'] = array(
        '#title' => t('Last Name'),
        '#type' => 'textfield',
        '#required' => FALSE,
        '#description' => t(''),
    );

    $form['child']['child_resident'] = array(
        '#title' => t('US Resident?'),
        '#type' => 'radios',
        '#required' => FALSE,
        '#options' => array('yes' => t('Yes'), 'no' => t('No')),
        '#default_value' => 'no',
    );

    $form['child_two'] = array(
        '#title' => 'Child',
        '#type' => 'fieldset',
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
        '#states' => array(
            'visible' => array(
                ':input[name="child_first_name"]' => array('filled' => TRUE),
            ),
        ),
    );

    $form['child_two']['child_two_first_name'] = array(
        '#title' => t('First Name'),
        '#type' => 'textfield',
        '#required' => FALSE,
        '#description' => t(''),
    );

    $form['child_two']['child_two_last_name'] = array(
        '#title' => t('Last Name'),
        '#type' => 'textfield',
        '#required' => FALSE,
        '#description' => t(''),
    );

    $form['child_two']['child_two_resident'] = array(
        '#title' => t('US Resident?'),
        '#type' => 'radios',
        '#required' => FALSE,
        '#options' => array('yes' => t('Yes'), 'no' => t('No')),
        '#default_value' => 'no',
    );

    $form['child_three'] = array(
        '#title' => 'Child',
        '#type' => 'fieldset',
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
        '#states' => array(
            'visible' => array(
                ':input[name="child_two_first_name"]' => array('filled' => TRUE),
            ),
        ),
    );

    $form['child_three']['child_three_first_name'] = array(
        '#title' => t('First Name'),
        '#type' => 'textfield',
        '#required' => FALSE,
        '#description' => t(''),
    );

    $form['child_three']['child_three_last_name'] = array(
        '#title' => t('Last Name'),
        '#type' => 'textfield',
        '#required' => FALSE,
        '#description' => t(''),
    );

    $form['child_three']['child_three_resident'] = array(
        '#title' => t('US Resident?'),
        '#type' => 'radios',
        '#required' => FALSE,
        '#options' => array('yes' => t('Yes'), 'no' => t('No')),
        '#default_value' => 'no',
    );

    $form['child_four'] = array(
        '#title' => 'Child',
        '#type' => 'fieldset',
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
        '#states' => array(
            'visible' => array(
                ':input[name="child_three_first_name"]' => array('filled' => TRUE),
            ),
        ),
    );

    $form['child_four']['child_four_first_name'] = array(
        '#title' => t('First Name'),
        '#type' => 'textfield',
        '#required' => FALSE,
        '#description' => t(''),
    );

    $form['child_four']['child_four_last_name'] = array(
        '#title' => t('Last Name'),
        '#type' => 'textfield',
        '#required' => FALSE,
        '#description' => t(''),
    );

    $form['child_four']['child_four_resident'] = array(
        '#title' => t('US Resident?'),
        '#type' => 'radios',
        '#required' => FALSE,
        '#options' => array('yes' => t('Yes'), 'no' => t('No')),
        '#default_value' => 'no',
    );

    $form['child_five'] = array(
        '#title' => 'Child',
        '#type' => 'fieldset',
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
        '#states' => array(
            'visible' => array(
                ':input[name="child_four_first_name"]' => array('filled' => TRUE),
            ),
        ),
    );

    $form['child_five']['child_five_first_name'] = array(
        '#title' => t('First Name'),
        '#type' => 'textfield',
        '#required' => FALSE,
        '#description' => t(''),
    );

    $form['child_five']['child_five_last_name'] = array(
        '#title' => t('Last Name'),
        '#type' => 'textfield',
        '#required' => FALSE,
        '#description' => t(''),
    );

    $form['child_five']['child_five_resident'] = array(
        '#title' => t('US Resident?'),
        '#type' => 'radios',
        '#required' => FALSE,
        '#options' => array('yes' => t('Yes'), 'no' => t('No')),
        '#default_value' => 'no',
    );

    global $user;
    $form['user_id'] = array(
        '#title' => t('Current User Id'),
        '#type' => 'hidden',
        '#required' => TRUE,
        '#value' => $user->uid,
    );

    $form['submit'] = array(
        '#type' => 'submit',
        '#value' => 'Submit',
    );

    return $form;
}

function collect_member_info_form_submit($form, &$form_state) {
    // Create a node object, and add node properties.
    $newNode = new stdClass;//or (object) NULL
    $newNode->type = 'member';
    $newNode->title = $form['member']['member_first_name']['#value'].' '.$form['member']['member_last_name']['#value'].' Information';
    $newNode->language = 'und';//or LANGUAGE_NONE or language code if Locale module is enabled
    $newNode->uid = 0;//or any id you wish
    node_object_prepare($newNode);

    //custom fields of node
    $newNode->field_member_first_name[LANGUAGE_NONE][0]['value'] = $form['member']['member_first_name']['#value'];
    $newNode->field_member_last_name[LANGUAGE_NONE][0]['value'] = $form['member']['member_last_name']['#value'];
    $newNode->field_member_address[LANGUAGE_NONE][0]['value'] = $form['member']['member_address']['#value'];
    $newNode->field_city[LANGUAGE_NONE][0]['value'] = $form['member']['member_city']['#value'];
    $newNode->field_state[LANGUAGE_NONE][0]['value'] = $form['member']['member_state']['#value'];
    $newNode->field_zip[LANGUAGE_NONE][0]['value'] = $form['member']['member_zip']['#value'];
    $newNode->field_phone[LANGUAGE_NONE][0]['value'] = $form['member']['member_phone']['#value'];
    $newNode->field_email[LANGUAGE_NONE][0]['value'] = $form['member']['member_email']['#value'];
    $newNode->field_member_us_resident[LANGUAGE_NONE][0]['tid'] = taxonomyId($form['member']['member_residency']['#value']);

//parents
    $newNode->field_mother_first_name[LANGUAGE_NONE][0]['value'] = $form['parents']['mother_first_name']['#value'];
    $newNode->field_mother_last_name[LANGUAGE_NONE][0]['value'] = $form['parents']['mother_last_name']['#value'];
    $newNode->field_mother_us_resident[LANGUAGE_NONE][0]['tid'] = taxonomyId($form['parents']['member_mother']['#value']);

    $newNode->field_father_first_name[LANGUAGE_NONE][0]['value'] = $form['parents']['father_first_name']['#value'];
    $newNode->field_father_last_name[LANGUAGE_NONE][0]['value'] = $form['parents']['father_last_name']['#value'];
    $newNode->field_father_us_resident[LANGUAGE_NONE][0]['tid'] = taxonomyId($form['parents']['member_father']['#value']);
//spouse
    $newNode->field_spouse_first_name[LANGUAGE_NONE][0]['value'] = $form['spouse']['spouse_first_name']['#value'];
    $newNode->field_spouse_last_name[LANGUAGE_NONE][0]['value'] = $form['spouse']['spouse_last_name']['#value'];
    $newNode->field_spouse_us_resident[LANGUAGE_NONE][0]['tid'] = taxonomyId($form['spouse']['spouse_resident']['#value']);
//First Child
    $newNode->field_first_child_first_name[LANGUAGE_NONE][0]['value'] = $form['child']['child_first_name']['#value'];
    $newNode->field_first_child_last_name[LANGUAGE_NONE][0]['value'] = $form['child']['child_last_name']['#value'];
    $newNode->field_first_child_us_resident[LANGUAGE_NONE][0]['tid'] = taxonomyId($form['child']['child_resident']['#value']);
//Second Child
    $newNode->field_second_child_first_name[LANGUAGE_NONE][0]['value'] = $form['child_two']['child_two_first_name']['#value'];
    $newNode->field_second_child_last_name[LANGUAGE_NONE][0]['value'] = $form['child_two']['child_two_last_name']['#value'];
    $newNode->field_second_child_us_resident[LANGUAGE_NONE][0]['tid'] = taxonomyId($form['child_two']['child_two_resident']['#value']);
//Third Child
    $newNode->field_third_child_first_name[LANGUAGE_NONE][0]['value'] = $form['child_three']['child_three_first_name']['#value'];
    $newNode->field_third_child_last_name[LANGUAGE_NONE][0]['value'] = $form['child_three']['child_three_last_name']['#value'];
    $newNode->field_third_child_us_resident[LANGUAGE_NONE][0]['tid'] = taxonomyId($form['child_three']['child_three_resident']['#value']);
//Fourth Child
    $newNode->field_four_child_first_name[LANGUAGE_NONE][0]['value'] = $form['child_four']['child_four_first_name']['#value'];
    $newNode->field_four_child_last_name[LANGUAGE_NONE][0]['value'] = $form['child_four']['child_four_last_name']['#value'];
    $newNode->field_four_child_us_resident[LANGUAGE_NONE][0]['tid'] = taxonomyId($form['child_four']['child_four_resident']['#value']);
//Fifth Child
    $newNode->field_fifth_child_first_name[LANGUAGE_NONE][0]['value'] = $form['child_five']['child_five_first_name']['#value'];
    $newNode->field_fifth_child_last_name[LANGUAGE_NONE][0]['value'] = $form['child_five']['child_five_last_name']['#value'];
    $newNode->field_fifth_child_us_resident[LANGUAGE_NONE][0]['tid'] = taxonomyId($form['child_five']['child_five_resident']['#value']);

    $newNode->field_user_id[LANGUAGE_NONE][0]['value'] = $form['user_id']['#value'];

    $newNode = node_submit($newNode);//prepare and return id
    node_save($newNode);

    // Display a message upon successful submission.
    drupal_set_message(t("Thank You @first_name @last_name for registering and becoming a member!", array('@first_name' =>$form_state['values']['member_first_name'],
        '@last_name' =>$form_state['values']['member_last_name'])));

    $destination = drupal_get_path_alias("node/".$newNode->nid);
    drupal_goto($destination);
}

function taxonomyId($tag){
    switch($tag){
        case 'yes':
            return 1;
        case 'no':
        default:
            return 2;
    }
}

function mega_members_block_info(){
    $blocks = array();
    $blocks['mega_menu'] = array(
        'info' => t('Kapasoft Module: Mega Menu'),
    );
    $blocks['mega_main_menu'] = array(
        'info' => t('Kapasoft Module: Mega Main Menu'),
    );
    $blocks['mega_main_hor_menu'] = array(
        'info' => t('Kapasoft Module: Mega Main Top Hor Menu'),
    );
    return $blocks;
}

function mega_members_block_view($delta = ''){
    $blocks = array();
    switch($delta){
        case 'mega_menu':{
            $blocks['subject'] = t('Mega Members');
            $blocks['content'] = theme_render_template(drupal_get_path('module', 'mega_members').'/inc/block--member-menu.tpl.php', mega_menu_config());
            break;
        }
        case 'mega_main_menu':{
            $blocks['subject'] = t('');
            $blocks['content'] = theme_render_template(drupal_get_path('module', 'mega_members').'/inc/block--mega-main-menu.tpl.php', mega_main_menu_config());
            break;
        }
        case 'mega_main_hor_menu':{
            $blocks['subject'] = t('');
            $blocks['content'] = theme_render_template(drupal_get_path('module', 'mega_members').'/inc/block--mega-main-hor-menu.tpl.php', mega_main_menu_config());
            break;
        }
    }
    return $blocks;
}

function mega_menu_config(){
    $config = array();
    $path_to_member = '';
    $anchor_memeber_profile = '';
    global $user;


    // Return nid of nodes of type "member" for the current user
    $nid_member = db_select('node', 'n')
        ->fields('n', array('nid'))
        ->fields('n', array('type'))
        ->condition('n.type', 'member')
        ->condition('n.uid', $user->uid)
        ->execute()
        ->fetchCol();


    //each user has only one membership profile
    if(count($nid_member) > 1){
        watchdog('kapasoft:mega_menu', 'membership duplicates for user:'.$user->uid, null, WATCHDOG_CRITICAL);
    }
    if(count($nid_member) == 0){
        //user hasn't registered to membership
        $path_to_member = 'register';
        $anchor_memeber_profile = '<span class="unregistered">Unregistered!</span> Please, register';
    }else{
        $path_to_member = drupal_get_path_alias("node/".$nid_member[0]);
        $anchor_memeber_profile = t('Personal Membership Info');
    }

    $link1 = array(
        'url' => url($path_to_member),
        'title' => $anchor_memeber_profile,
    );
    $link2 = array(
        'url' => url('member-overview'),
        'title' => t('View All Members'),
    );

    $link3 = array(
        'url' => url('user/logout'),
        'title' => t('Log Out'),
    );
    $config['menu_items'] = array(
        $link1,
        $link2,
        $link3,
    );

    return $config;
}

function mega_main_menu_config(){
    $mainMenuArray = menu_load_links('main-menu');
    $finalMainMenu = array();
    $finalMainMenu['main_menu'] = array();
    foreach($mainMenuArray as $key=>$menuItem){
        if($menuItem['link_path'] != "<front>"){
        $menu_item = array();
        $menu_item['active'] = false;
        $linkPath = $menuItem['link_path'];
        $linkPathAlias = drupal_get_path_alias($linkPath);
        $menu_item['url'] = $linkPathAlias;
        $menu_item['title'] = $menuItem['link_title'];
        $finalMainMenu['main_menu'][] = $menu_item;
        }
    }
    return $finalMainMenu;
}